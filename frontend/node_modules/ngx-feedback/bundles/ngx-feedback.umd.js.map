{"version":3,"file":"ngx-feedback.umd.js.map","sources":["ng://ngx-feedback/lib/services/component-loader.service.ts","ng://ngx-feedback/lib/services/events.service.ts","ng://ngx-feedback/lib/components/feedback-button/feedback-button.component.ts","ng://ngx-feedback/lib/components/modal/modal.component.ts","ng://ngx-feedback/lib/components/backdrop/backdrop.component.ts","ng://ngx-feedback/lib/services/modal.service.ts","ng://ngx-feedback/lib/services/selectors.service.ts","ng://ngx-feedback/lib/services/orchestrator.service.ts","ng://ngx-feedback/lib/ngx-feedback.service.ts","ng://ngx-feedback/lib/components/button/button.component.ts","ng://ngx-feedback/lib/components/star/star.component.ts","ng://ngx-feedback/lib/components/star-vote/star-vote.component.ts","ng://ngx-feedback/lib/ngx-feedback.module.ts","ng://ngx-feedback/lib/models/feedback-data.model.ts"],"sourcesContent":["import {\r\n    Injectable,\r\n    Type,\r\n    ComponentRef,\r\n    ComponentFactoryResolver,\r\n    ApplicationRef,\r\n    Injector,\r\n    EmbeddedViewRef\r\n} from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ComponentLoaderService<T> {\r\n    constructor(\r\n        private readonly componentFactoryResolver: ComponentFactoryResolver,\r\n        private appRef: ApplicationRef,\r\n        private injector: Injector\r\n    ) {}\r\n    load(componentType: Type<T>): ComponentRef<T> {\r\n        // 1. Create a component reference from the component\r\n        const ref: ComponentRef<T> = this.componentFactoryResolver.resolveComponentFactory(componentType).create(this.injector);\r\n\r\n        // 2. Attach component to the appRef so that it's inside the ng component tree\r\n        this.appRef.attachView(ref.hostView);\r\n\r\n        // 3. Get DOM element from component\r\n        const domElem = (ref.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n\r\n        // 4. Append DOM element to the body\r\n        document.body.appendChild(domElem);\r\n        ref.changeDetectorRef.detectChanges();\r\n\r\n        return ref;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { FeedbackData } from '../models/feedback-data.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventsService {\r\n    constructor() {}\r\n\r\n    private feedbackClick: Subject<any> = new Subject<any>();\r\n    feedbackClickObservable: Observable<any> = this.feedbackClick.asObservable();\r\n\r\n    private specificFeedbackClick: Subject<any> = new Subject<any>();\r\n    specificFeedbackClickObservable: Observable<any> = this.specificFeedbackClick.asObservable();\r\n\r\n    private genericFeedbackClick: Subject<any> = new Subject<any>();\r\n    genericFeedbackClickObservable: Observable<any> = this.genericFeedbackClick.asObservable();\r\n\r\n    private closeClick: Subject<any> = new Subject<any>();\r\n    closeClickClickObservable: Observable<any> = this.closeClick.asObservable();\r\n\r\n    private onSendClick: Subject<any> = new Subject<FeedbackData>();\r\n    onSendClickObservable: Observable<FeedbackData> = this.onSendClick.asObservable();\r\n\r\n    onSpecificFeedbackClick() {\r\n        this.specificFeedbackClick.next();\r\n    }\r\n\r\n    onGenericFeedbackClik() {\r\n        this.genericFeedbackClick.next();\r\n    }\r\n    onFeedbackButtonClick() {\r\n        this.feedbackClick.next();\r\n    }\r\n\r\n    onCloseClicked() {\r\n        this.closeClick.next();\r\n    }\r\n\r\n    onSendClicked(data: FeedbackData) {\r\n        this.onSendClick.next(data);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n    selector: 'ngx-feedback-main-btn',\n    templateUrl: './feedback-button.component.html',\n    styleUrls: ['./feedback-button.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FeedbackButtonComponent implements OnInit {\n    constructor(private eventsService: EventsService) {}\n\n    ngOnInit() {}\n    onClick() {\n        this.eventsService.onFeedbackButtonClick();\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FeedbackData } from '../../models/feedback-data.model';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n    selector: 'ngx-feedback-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n    imgSrc = '';\n    enterSpecific: boolean;\n    enterGeneric: boolean;\n    voted: boolean;\n    thanks: boolean;\n\n    @ViewChild('comment') comment: ElementRef;\n\n    private formData: FeedbackData = { rate: 0, comment: '', screenshot: null } as FeedbackData;\n    constructor(private readonly eventsService: EventsService) {}\n\n    ngOnInit() {}\n    onSpecific() {\n        this.eventsService.onSpecificFeedbackClick();\n    }\n\n    onGeneric() {\n        this.eventsService.onGenericFeedbackClik();\n    }\n\n    onCloseClicked() {\n        this.eventsService.onCloseClicked();\n    }\n\n    setPreview(preview: any) {\n        this.imgSrc = preview;\n        this.formData.screenshot = preview;\n    }\n\n    onVote(rate: number) {\n        this.voted = true;\n        this.formData.rate = rate;\n    }\n\n    onSend() {\n        this.formData.comment = this.comment.nativeElement.value;\n        this.eventsService.onSendClicked(this.formData);\n        this.thanks = true;\n        setTimeout(() => {\n            this.eventsService.onCloseClicked();\n        }, 2000);\n    }\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'ngx-feedback-backdrop',\n    templateUrl: './backdrop.component.html',\n    styleUrls: ['./backdrop.component.scss']\n})\nexport class BackdropComponent implements OnInit {\n    @Output()\n    click: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    onClick() {\n        this.click.emit();\n    }\n}\n","import { Injectable, ComponentRef } from '@angular/core';\r\nimport { ComponentLoaderService } from './component-loader.service';\r\nimport { ModalComponent } from '../components/modal/modal.component';\r\nimport { BackdropComponent } from '../components/backdrop/backdrop.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modalRef: ComponentRef<ModalComponent>;\r\n    private backdropRef: ComponentRef<BackdropComponent>;\r\n\r\n    constructor(private readonly componentLoader: ComponentLoaderService<any>) {}\r\n\r\n    openWithPreview(preview: any) {\r\n        this.draw();\r\n        this.modalRef.instance.setPreview(preview);\r\n    }\r\n    draw() {\r\n        this.backdropRef = this.componentLoader.load(BackdropComponent);\r\n        this.modalRef = this.componentLoader.load(ModalComponent);\r\n    }\r\n\r\n    remove() {\r\n        this.modalRef.destroy();\r\n        this.backdropRef.destroy();\r\n    }\r\n}\r\n","import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\r\nimport { fromEvent, Subscription, Subject } from 'rxjs';\r\nimport html2canvas from 'html2canvas';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SelectorsService {\r\n    preview: Subject<any> = new Subject();\r\n    subs: Subscription[] = [];\r\n\r\n    source: Subscription;\r\n\r\n    private renderer: Renderer2;\r\n\r\n    constructor(private readonly rendererFactory: RendererFactory2) {\r\n        this.renderer = this.rendererFactory.createRenderer(null, null);\r\n    }\r\n\r\n    pageScreenshot() {\r\n        this.screenshot(document.body);\r\n    }\r\n    elementsHighlight() {\r\n        let element: Element;\r\n        const elements = [];\r\n        this.source = fromEvent(document, 'mousemove').subscribe((ev: MouseEvent) => {\r\n            if (element) {\r\n                this.renderer.removeClass(element, 'ngx-feedback__highlight');\r\n            }\r\n            element = document.elementFromPoint(ev.x, ev.y);\r\n            if (elements.findIndex(el => el === element) === -1) {\r\n                elements.push(element);\r\n                this.subs.push(\r\n                    fromEvent(element, 'click').subscribe((evt: MouseEvent) => {\r\n                        evt.stopPropagation();\r\n                        this.screenshot(element);\r\n                    })\r\n                );\r\n            }\r\n            this.renderer.addClass(element, 'ngx-feedback__highlight');\r\n        });\r\n    }\r\n\r\n    screenshot(element: any) {\r\n        let image;\r\n        html2canvas(element).then(canvas => {\r\n            image = (canvas as HTMLCanvasElement).toDataURL();\r\n            this.preview.next(image);\r\n        });\r\n        this.renderer.removeClass(element, 'ngx-feedback__highlight');\r\n\r\n        this.clean();\r\n    }\r\n\r\n    clean() {\r\n        if (this.source) {\r\n            this.source.unsubscribe();\r\n        }\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n}\r\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\r\nimport { ModalService } from './modal.service';\r\nimport { SelectorsService } from './selectors.service';\r\nimport { EventsService } from './events.service';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { FeedbackData } from '../models/feedback-data.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OrchestratorService implements OnInit, OnDestroy {\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    onSend: Subject<FeedbackData> = new Subject<FeedbackData>();\r\n    constructor(\r\n        private readonly modalService: ModalService,\r\n        private readonly selectorsService: SelectorsService,\r\n        private readonly eventsService: EventsService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.subscriptions.push(\r\n            this.onFeedbackButtonClick(),\r\n            this.onSpecificFeedbackClick(),\r\n            this.onGenericFeedbackClick(),\r\n            this.onElementSelected(),\r\n            this.onCloseClick(),\r\n            this.onSendClick()\r\n        );\r\n    }\r\n\r\n    private onElementSelected() {\r\n        return this.selectorsService.preview.subscribe(prev => {\r\n            this.modalService.openWithPreview(prev);\r\n        });\r\n    }\r\n\r\n    private onFeedbackButtonClick() {\r\n        return this.eventsService.feedbackClickObservable.subscribe(() => {\r\n            this.modalService.draw();\r\n        });\r\n    }\r\n\r\n    private onSpecificFeedbackClick() {\r\n        return this.eventsService.specificFeedbackClickObservable.subscribe(() => {\r\n            this.modalService.remove();\r\n            this.selectorsService.elementsHighlight();\r\n        });\r\n    }\r\n\r\n    private onGenericFeedbackClick() {\r\n        return this.eventsService.genericFeedbackClickObservable.subscribe(() => {\r\n            this.modalService.remove();\r\n            this.selectorsService.pageScreenshot();\r\n        });\r\n    }\r\n\r\n    private onCloseClick() {\r\n        return this.eventsService.closeClickClickObservable.subscribe(() => {\r\n            this.modalService.remove();\r\n        });\r\n    }\r\n\r\n    private onSendClick() {\r\n        return this.eventsService.onSendClickObservable.subscribe((data: FeedbackData) => {\r\n            this.onSend.next(data);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(sub => {\r\n            sub.unsubscribe();\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ComponentLoaderService } from './services/component-loader.service';\nimport { FeedbackButtonComponent } from './components/feedback-button/feedback-button.component';\nimport { OrchestratorService } from './services';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxFeedbackService {\n    constructor(\n        private readonly componentLoader: ComponentLoaderService<FeedbackButtonComponent>,\n        private readonly orchestratorService: OrchestratorService\n    ) {}\n\n    listenForFeedbacks() {\n        this.orchestratorService.ngOnInit();\n        this.componentLoader.load(FeedbackButtonComponent);\n\n        return this.orchestratorService.onSend;\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-feedback-btn',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n    @Output()\n    click: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    onClick() {\n        this.click.emit();\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-feedback-star',\n    templateUrl: './star.component.html',\n    styleUrls: ['./star.component.scss']\n})\nexport class StarComponent implements OnInit {\n    @Input()\n    type: 'full' | 'empty' | 'temp';\n\n    @Output()\n    click: EventEmitter<any> = new EventEmitter();\n    constructor() {}\n\n    ngOnInit() {}\n\n    onClick() {\n        this.click.emit();\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-feedback-star-vote',\n    templateUrl: './star-vote.component.html',\n    styleUrls: ['./star-vote.component.scss']\n})\nexport class StarVoteComponent implements OnInit {\n    stars: any[] = [\n        { type: 'empty', value: 1 },\n        { type: 'empty', value: 2 },\n        { type: 'empty', value: 3 },\n        { type: 'empty', value: 4 },\n        { type: 'empty', value: 5 }\n    ];\n\n    @Output()\n    voted: EventEmitter<number> = new EventEmitter<number>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    onClick(index: number) {\n        this.stars.forEach((s, i) => {\n            if (i <= index) {\n                s.type = 'full';\n            } else {\n                s.type = 'empty';\n            }\n        });\n        this.voted.emit(index + 1);\n    }\n\n    onMouseEnter(index: number) {\n        this.stars.forEach((s, i) => {\n            if (i <= index && s.type !== 'full') {\n                s.type = 'temp';\n            }\n        });\n    }\n\n    onMouseLeave(index: number) {\n        this.stars.forEach((s, i) => {\n            if (s.type === 'temp') {\n                s.type = 'empty';\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FeedbackButtonComponent } from './components/feedback-button/feedback-button.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { ComponentLoaderService } from './services/component-loader.service';\nimport { ModalService } from './services/modal.service';\nimport { NgxFeedbackService } from './ngx-feedback.service';\nimport { CommonModule } from '@angular/common';\nimport { SelectorsService } from './services/selectors.service';\nimport { ButtonComponent } from './components/button/button.component';\nimport { BackdropComponent } from './components/backdrop/backdrop.component';\nimport { OrchestratorService } from './services/orchestrator.service';\nimport { EventsService } from './services/events.service';\nimport { StarComponent } from './components/star/star.component';\nimport { StarVoteComponent } from './components/star-vote/star-vote.component';\n\n@NgModule({\n    declarations: [\n        FeedbackButtonComponent,\n        ModalComponent,\n        ButtonComponent,\n        BackdropComponent,\n        StarComponent,\n        StarVoteComponent,\n    ],\n    entryComponents: [FeedbackButtonComponent, ModalComponent, BackdropComponent],\n    providers: [NgxFeedbackService, OrchestratorService, ComponentLoaderService, ModalService, SelectorsService, EventsService],\n    imports: [CommonModule],\n    exports: []\n})\nexport class NgxFeedbackModule {}\n","export class FeedbackData {\r\n    rate: number;\r\n    comment: string;\r\n    screenshot: any;\r\n}\r\n"],"names":["Injectable","ComponentFactoryResolver","ApplicationRef","Injector","Subject","Component","ViewEncapsulation","ViewChild","EventEmitter","Output","fromEvent","RendererFactory2","Input","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;AAAA;;;AAUA;QAEI,gCACqB,wBAAkD,EAC3D,MAAsB,EACtB,QAAkB;YAFT,6BAAwB,GAAxB,wBAAwB,CAA0B;YAC3D,WAAM,GAAN,MAAM,CAAgB;YACtB,aAAQ,GAAR,QAAQ,CAAU;SAC1B;;;;;QACJ,qCAAI;;;;YAAJ,UAAK,aAAsB;;;oBAEjB,GAAG,GAAoB,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;;gBAGvH,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;;oBAG/B,OAAO,sBAAG,oBAAC,GAAG,CAAC,QAAQ,IAA0B,SAAS,CAAC,CAAC,CAAC,EAAe;;gBAGlF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;gBAEtC,OAAO,GAAG,CAAC;aACd;;oBAtBJA,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBAN9BC,2BAAwB;wBACxBC,iBAAc;wBACdC,WAAQ;;;;qCANZ;KAUA;;;;;;ACVA;QAMI;YAEQ,kBAAa,GAAiB,IAAIC,YAAO,EAAO,CAAC;YACzD,4BAAuB,GAAoB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;YAErE,0BAAqB,GAAiB,IAAIA,YAAO,EAAO,CAAC;YACjE,oCAA+B,GAAoB,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;YAErF,yBAAoB,GAAiB,IAAIA,YAAO,EAAO,CAAC;YAChE,mCAA8B,GAAoB,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;YAEnF,eAAU,GAAiB,IAAIA,YAAO,EAAO,CAAC;YACtD,8BAAyB,GAAoB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;YAEpE,gBAAW,GAAiB,IAAIA,YAAO,EAAgB,CAAC;YAChE,0BAAqB,GAA6B,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;SAflE;;;;QAiBhB,+CAAuB;;;YAAvB;gBACI,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;aACrC;;;;QAED,6CAAqB;;;YAArB;gBACI,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;aACpC;;;;QACD,6CAAqB;;;YAArB;gBACI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;aAC7B;;;;QAED,sCAAc;;;YAAd;gBACI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;aAC1B;;;;;QAED,qCAAa;;;;YAAb,UAAc,IAAkB;gBAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;;oBApCJJ,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;4BAJlC;KAIA;;;;;;ACJA;QAUI,iCAAoB,aAA4B;YAA5B,kBAAa,GAAb,aAAa,CAAe;SAAI;;;;QAEpD,0CAAQ;;;YAAR,eAAa;;;;QACb,yCAAO;;;YAAP;gBACI,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;aAC9C;;oBAZJK,YAAS,SAAC;wBACP,QAAQ,EAAE,uBAAuB;wBACjC,kGAA+C;wBAE/C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAPQ,aAAa;;;QAetB,8BAAC;KAbD;;;;;;ACHA;QAmBI,wBAA6B,aAA4B;YAA5B,kBAAa,GAAb,aAAa,CAAe;YATzD,WAAM,GAAG,EAAE,CAAC;YAQJ,aAAQ,sBAAiB,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,EAAgB,CAAC;SAC/B;;;;QAE7D,iCAAQ;;;YAAR,eAAa;;;;QACb,mCAAU;;;YAAV;gBACI,IAAI,CAAC,aAAa,CAAC,uBAAuB,EAAE,CAAC;aAChD;;;;QAED,kCAAS;;;YAAT;gBACI,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;aAC9C;;;;QAED,uCAAc;;;YAAd;gBACI,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;aACvC;;;;;QAED,mCAAU;;;;YAAV,UAAW,OAAY;gBACnB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;gBACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,OAAO,CAAC;aACtC;;;;;QAED,+BAAM;;;;YAAN,UAAO,IAAY;gBACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;aAC7B;;;;QAED,+BAAM;;;YAAN;gBAAA,iBAOC;gBANG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;gBACzD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,UAAU;;mBAAC;oBACP,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;iBACvC,GAAE,IAAI,CAAC,CAAC;aACZ;;oBA/CJD,YAAS,SAAC;wBACP,QAAQ,EAAE,oBAAoB;wBAC9B,wmTAAqC;;qBAExC;;;;;wBANQ,aAAa;;;;8BAcjBE,YAAS,SAAC,SAAS;;QAoCxB,qBAAC;KAhDD;;;;;;ACJA;QAWI;YAFA,UAAK,GAAsB,IAAIC,eAAY,EAAO,CAAC;SAEnC;;;;QAEhB,oCAAQ;;;YAAR,eAAa;;;;QAEb,mCAAO;;;YAAP;gBACI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aACrB;;oBAfJH,YAAS,SAAC;wBACP,QAAQ,EAAE,uBAAuB;wBACjC,kEAAwC;;qBAE3C;;;;;4BAEII,SAAM;;QAUX,wBAAC;KAhBD;;;;;;ACFA;QAUI,sBAA6B,eAA4C;YAA5C,oBAAe,GAAf,eAAe,CAA6B;SAAI;;;;;QAE7E,sCAAe;;;;YAAf,UAAgB,OAAY;gBACxB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAC9C;;;;QACD,2BAAI;;;YAAJ;gBACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC7D;;;;QAED,6BAAM;;;YAAN;gBACI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACxB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aAC9B;;oBAnBJT,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBAJzB,sBAAsB;;;;2BAD/B;KAKA;;;;;;ACLA;QAaI,0BAA6B,eAAiC;YAAjC,oBAAe,GAAf,eAAe,CAAkB;YAP9D,YAAO,GAAiB,IAAII,YAAO,EAAE,CAAC;YACtC,SAAI,GAAmB,EAAE,CAAC;YAOtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACnE;;;;QAED,yCAAc;;;YAAd;gBACI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAClC;;;;QACD,4CAAiB;;;YAAjB;gBAAA,iBAmBC;;oBAlBO,OAAgB;;oBACd,QAAQ,GAAG,EAAE;gBACnB,IAAI,CAAC,MAAM,GAAGM,cAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,SAAS;;;mBAAC,UAAC,EAAc;oBACpE,IAAI,OAAO,EAAE;wBACT,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;qBACjE;oBACD,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBAChD,IAAI,QAAQ,CAAC,SAAS;;;uBAAC,UAAA,EAAE,IAAI,OAAA,EAAE,KAAK,OAAO,GAAA,EAAC,KAAK,CAAC,CAAC,EAAE;wBACjD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACvB,KAAI,CAAC,IAAI,CAAC,IAAI,CACVA,cAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,SAAS;;;2BAAC,UAAC,GAAe;4BAClD,GAAG,CAAC,eAAe,EAAE,CAAC;4BACtB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;yBAC5B,EAAC,CACL,CAAC;qBACL;oBACD,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;iBAC9D,EAAC,CAAC;aACN;;;;;QAED,qCAAU;;;;YAAV,UAAW,OAAY;gBAAvB,iBASC;;oBARO,KAAK;gBACT,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI;;;mBAAC,UAAA,MAAM;oBAC5B,KAAK,GAAG,oBAAC,MAAM,IAAuB,SAAS,EAAE,CAAC;oBAClD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC5B,EAAC,CAAC;gBACH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;gBAE9D,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;;;;QAED,gCAAK;;;YAAL;gBACI,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;iBAC7B;gBACD,IAAI,CAAC,IAAI,CAAC,OAAO;;;mBAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,WAAW,EAAE,GAAA,EAAC,CAAC;aAC/C;;oBArDJV,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBAJFW,mBAAgB;;;;+BAAhD;KAIA;;;;;;ACJA;QAYI,6BACqB,YAA0B,EAC1B,gBAAkC,EAClC,aAA4B;YAF5B,iBAAY,GAAZ,YAAY,CAAc;YAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,kBAAa,GAAb,aAAa,CAAe;YANzC,kBAAa,GAAmB,EAAE,CAAC;YAE3C,WAAM,GAA0B,IAAIP,YAAO,EAAgB,CAAC;SAKxD;;;;QAEJ,sCAAQ;;;YAAR;gBACI,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,qBAAqB,EAAE,EAC5B,IAAI,CAAC,uBAAuB,EAAE,EAC9B,IAAI,CAAC,sBAAsB,EAAE,EAC7B,IAAI,CAAC,iBAAiB,EAAE,EACxB,IAAI,CAAC,YAAY,EAAE,EACnB,IAAI,CAAC,WAAW,EAAE,CACrB,CAAC;aACL;;;;;QAEO,+CAAiB;;;;YAAzB;gBAAA,iBAIC;gBAHG,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS;;;mBAAC,UAAA,IAAI;oBAC/C,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;iBAC3C,EAAC,CAAC;aACN;;;;;QAEO,mDAAqB;;;;YAA7B;gBAAA,iBAIC;gBAHG,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,SAAS;;mBAAC;oBACxD,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;iBAC5B,EAAC,CAAC;aACN;;;;;QAEO,qDAAuB;;;;YAA/B;gBAAA,iBAKC;gBAJG,OAAO,IAAI,CAAC,aAAa,CAAC,+BAA+B,CAAC,SAAS;;mBAAC;oBAChE,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;oBAC3B,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;iBAC7C,EAAC,CAAC;aACN;;;;;QAEO,oDAAsB;;;;YAA9B;gBAAA,iBAKC;gBAJG,OAAO,IAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,SAAS;;mBAAC;oBAC/D,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;oBAC3B,KAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;iBAC1C,EAAC,CAAC;aACN;;;;;QAEO,0CAAY;;;;YAApB;gBAAA,iBAIC;gBAHG,OAAO,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,SAAS;;mBAAC;oBAC1D,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC9B,EAAC,CAAC;aACN;;;;;QAEO,yCAAW;;;;YAAnB;gBAAA,iBAIC;gBAHG,OAAO,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,SAAS;;;mBAAC,UAAC,IAAkB;oBACzE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC1B,EAAC,CAAC;aACN;;;;QACD,yCAAW;;;YAAX;gBACI,IAAI,CAAC,aAAa,CAAC,OAAO;;;mBAAC,UAAA,GAAG;oBAC1B,GAAG,CAAC,WAAW,EAAE,CAAC;iBACrB,EAAC,CAAC;aACN;;oBA/DJJ,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBANzB,YAAY;wBACZ,gBAAgB;wBAChB,aAAa;;;;kCAHtB;KAOA;;;;;;;;;;;ACPA;QASI,4BACqB,eAAgE,EAChE,mBAAwC;YADxC,oBAAe,GAAf,eAAe,CAAiD;YAChE,wBAAmB,GAAnB,mBAAmB,CAAqB;SACzD;;;;QAEJ,+CAAkB;;;YAAlB;gBACI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;gBACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBAEnD,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;aAC1C;;oBAdJA,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBANQ,sBAAsB;wBAEtB,mBAAmB;;;;iCAH5B;KAKA;;;;;;ACLA;QAWI;YAFA,UAAK,GAAsB,IAAIQ,eAAY,EAAO,CAAC;SAEnC;;;;QAEhB,kCAAQ;;;YAAR,eAAa;;;;QAEb,iCAAO;;;YAAP;gBACI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aACrB;;oBAfJH,YAAS,SAAC;wBACP,QAAQ,EAAE,kBAAkB;wBAC5B,oHAAsC;;qBAEzC;;;;;4BAEII,SAAM;;QAUX,sBAAC;KAhBD;;;;;;ACFA;QAaI;YADA,UAAK,GAAsB,IAAID,eAAY,EAAE,CAAC;SAC9B;;;;QAEhB,gCAAQ;;;YAAR,eAAa;;;;QAEb,+BAAO;;;YAAP;gBACI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aACrB;;oBAjBJH,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAC7B,q/BAAoC;;qBAEvC;;;;;2BAEIO,QAAK;4BAGLH,SAAM;;QASX,oBAAC;KAlBD;;;;;;ACFA;QAmBI;YAXA,UAAK,GAAU;gBACX,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;gBAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;gBAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;gBAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;gBAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;aAC9B,CAAC;YAGF,UAAK,GAAyB,IAAID,eAAY,EAAU,CAAC;SAEzC;;;;QAEhB,oCAAQ;;;YAAR,eAAa;;;;;QAEb,mCAAO;;;;YAAP,UAAQ,KAAa;gBACjB,IAAI,CAAC,KAAK,CAAC,OAAO;;;;mBAAC,UAAC,CAAC,EAAE,CAAC;oBACpB,IAAI,CAAC,IAAI,KAAK,EAAE;wBACZ,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;qBACnB;yBAAM;wBACH,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;qBACpB;iBACJ,EAAC,CAAC;gBACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aAC9B;;;;;QAED,wCAAY;;;;YAAZ,UAAa,KAAa;gBACtB,IAAI,CAAC,KAAK,CAAC,OAAO;;;;mBAAC,UAAC,CAAC,EAAE,CAAC;oBACpB,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,EAAE;wBACjC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;qBACnB;iBACJ,EAAC,CAAC;aACN;;;;;QAED,wCAAY;;;;YAAZ,UAAa,KAAa;gBACtB,IAAI,CAAC,KAAK,CAAC,OAAO;;;;mBAAC,UAAC,CAAC,EAAE,CAAC;oBACpB,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,EAAE;wBACnB,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;qBACpB;iBACJ,EAAC,CAAC;aACN;;oBA9CJH,YAAS,SAAC;wBACP,QAAQ,EAAE,wBAAwB;wBAClC,qYAAyC;;qBAE5C;;;;;4BAUII,SAAM;;QAiCX,wBAAC;KA/CD;;;;;;ACFA;QAeA;SAciC;;oBAdhCI,WAAQ,SAAC;wBACN,YAAY,EAAE;4BACV,uBAAuB;4BACvB,cAAc;4BACd,eAAe;4BACf,iBAAiB;4BACjB,aAAa;4BACb,iBAAiB;yBACpB;wBACD,eAAe,EAAE,CAAC,uBAAuB,EAAE,cAAc,EAAE,iBAAiB,CAAC;wBAC7E,SAAS,EAAE,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,CAAC;wBAC3H,OAAO,EAAE,CAACC,mBAAY,CAAC;wBACvB,OAAO,EAAE,EAAE;qBACd;;QAC+B,wBAAC;KAdjC;;;;;;ACfA;QAAA;SAIC;QAAD,mBAAC;IAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
