{"version":3,"file":"ngx-feedback.js.map","sources":["ng://ngx-feedback/lib/services/component-loader.service.ts","ng://ngx-feedback/lib/services/events.service.ts","ng://ngx-feedback/lib/components/feedback-button/feedback-button.component.ts","ng://ngx-feedback/lib/components/modal/modal.component.ts","ng://ngx-feedback/lib/components/backdrop/backdrop.component.ts","ng://ngx-feedback/lib/services/modal.service.ts","ng://ngx-feedback/lib/services/selectors.service.ts","ng://ngx-feedback/lib/services/orchestrator.service.ts","ng://ngx-feedback/lib/ngx-feedback.service.ts","ng://ngx-feedback/lib/components/button/button.component.ts","ng://ngx-feedback/lib/components/star/star.component.ts","ng://ngx-feedback/lib/components/star-vote/star-vote.component.ts","ng://ngx-feedback/lib/ngx-feedback.module.ts","ng://ngx-feedback/lib/models/feedback-data.model.ts"],"sourcesContent":["import {\r\n    Injectable,\r\n    Type,\r\n    ComponentRef,\r\n    ComponentFactoryResolver,\r\n    ApplicationRef,\r\n    Injector,\r\n    EmbeddedViewRef\r\n} from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ComponentLoaderService<T> {\r\n    constructor(\r\n        private readonly componentFactoryResolver: ComponentFactoryResolver,\r\n        private appRef: ApplicationRef,\r\n        private injector: Injector\r\n    ) {}\r\n    load(componentType: Type<T>): ComponentRef<T> {\r\n        // 1. Create a component reference from the component\r\n        const ref: ComponentRef<T> = this.componentFactoryResolver.resolveComponentFactory(componentType).create(this.injector);\r\n\r\n        // 2. Attach component to the appRef so that it's inside the ng component tree\r\n        this.appRef.attachView(ref.hostView);\r\n\r\n        // 3. Get DOM element from component\r\n        const domElem = (ref.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n\r\n        // 4. Append DOM element to the body\r\n        document.body.appendChild(domElem);\r\n        ref.changeDetectorRef.detectChanges();\r\n\r\n        return ref;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { FeedbackData } from '../models/feedback-data.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventsService {\r\n    constructor() {}\r\n\r\n    private feedbackClick: Subject<any> = new Subject<any>();\r\n    feedbackClickObservable: Observable<any> = this.feedbackClick.asObservable();\r\n\r\n    private specificFeedbackClick: Subject<any> = new Subject<any>();\r\n    specificFeedbackClickObservable: Observable<any> = this.specificFeedbackClick.asObservable();\r\n\r\n    private genericFeedbackClick: Subject<any> = new Subject<any>();\r\n    genericFeedbackClickObservable: Observable<any> = this.genericFeedbackClick.asObservable();\r\n\r\n    private closeClick: Subject<any> = new Subject<any>();\r\n    closeClickClickObservable: Observable<any> = this.closeClick.asObservable();\r\n\r\n    private onSendClick: Subject<any> = new Subject<FeedbackData>();\r\n    onSendClickObservable: Observable<FeedbackData> = this.onSendClick.asObservable();\r\n\r\n    onSpecificFeedbackClick() {\r\n        this.specificFeedbackClick.next();\r\n    }\r\n\r\n    onGenericFeedbackClik() {\r\n        this.genericFeedbackClick.next();\r\n    }\r\n    onFeedbackButtonClick() {\r\n        this.feedbackClick.next();\r\n    }\r\n\r\n    onCloseClicked() {\r\n        this.closeClick.next();\r\n    }\r\n\r\n    onSendClicked(data: FeedbackData) {\r\n        this.onSendClick.next(data);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n    selector: 'ngx-feedback-main-btn',\n    templateUrl: './feedback-button.component.html',\n    styleUrls: ['./feedback-button.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FeedbackButtonComponent implements OnInit {\n    constructor(private eventsService: EventsService) {}\n\n    ngOnInit() {}\n    onClick() {\n        this.eventsService.onFeedbackButtonClick();\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FeedbackData } from '../../models/feedback-data.model';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n    selector: 'ngx-feedback-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n    imgSrc = '';\n    enterSpecific: boolean;\n    enterGeneric: boolean;\n    voted: boolean;\n    thanks: boolean;\n\n    @ViewChild('comment') comment: ElementRef;\n\n    private formData: FeedbackData = { rate: 0, comment: '', screenshot: null } as FeedbackData;\n    constructor(private readonly eventsService: EventsService) {}\n\n    ngOnInit() {}\n    onSpecific() {\n        this.eventsService.onSpecificFeedbackClick();\n    }\n\n    onGeneric() {\n        this.eventsService.onGenericFeedbackClik();\n    }\n\n    onCloseClicked() {\n        this.eventsService.onCloseClicked();\n    }\n\n    setPreview(preview: any) {\n        this.imgSrc = preview;\n        this.formData.screenshot = preview;\n    }\n\n    onVote(rate: number) {\n        this.voted = true;\n        this.formData.rate = rate;\n    }\n\n    onSend() {\n        this.formData.comment = this.comment.nativeElement.value;\n        this.eventsService.onSendClicked(this.formData);\n        this.thanks = true;\n        setTimeout(() => {\n            this.eventsService.onCloseClicked();\n        }, 2000);\n    }\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'ngx-feedback-backdrop',\n    templateUrl: './backdrop.component.html',\n    styleUrls: ['./backdrop.component.scss']\n})\nexport class BackdropComponent implements OnInit {\n    @Output()\n    click: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    onClick() {\n        this.click.emit();\n    }\n}\n","import { Injectable, ComponentRef } from '@angular/core';\r\nimport { ComponentLoaderService } from './component-loader.service';\r\nimport { ModalComponent } from '../components/modal/modal.component';\r\nimport { BackdropComponent } from '../components/backdrop/backdrop.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modalRef: ComponentRef<ModalComponent>;\r\n    private backdropRef: ComponentRef<BackdropComponent>;\r\n\r\n    constructor(private readonly componentLoader: ComponentLoaderService<any>) {}\r\n\r\n    openWithPreview(preview: any) {\r\n        this.draw();\r\n        this.modalRef.instance.setPreview(preview);\r\n    }\r\n    draw() {\r\n        this.backdropRef = this.componentLoader.load(BackdropComponent);\r\n        this.modalRef = this.componentLoader.load(ModalComponent);\r\n    }\r\n\r\n    remove() {\r\n        this.modalRef.destroy();\r\n        this.backdropRef.destroy();\r\n    }\r\n}\r\n","import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\r\nimport { fromEvent, Subscription, Subject } from 'rxjs';\r\nimport html2canvas from 'html2canvas';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SelectorsService {\r\n    preview: Subject<any> = new Subject();\r\n    subs: Subscription[] = [];\r\n\r\n    source: Subscription;\r\n\r\n    private renderer: Renderer2;\r\n\r\n    constructor(private readonly rendererFactory: RendererFactory2) {\r\n        this.renderer = this.rendererFactory.createRenderer(null, null);\r\n    }\r\n\r\n    pageScreenshot() {\r\n        this.screenshot(document.body);\r\n    }\r\n    elementsHighlight() {\r\n        let element: Element;\r\n        const elements = [];\r\n        this.source = fromEvent(document, 'mousemove').subscribe((ev: MouseEvent) => {\r\n            if (element) {\r\n                this.renderer.removeClass(element, 'ngx-feedback__highlight');\r\n            }\r\n            element = document.elementFromPoint(ev.x, ev.y);\r\n            if (elements.findIndex(el => el === element) === -1) {\r\n                elements.push(element);\r\n                this.subs.push(\r\n                    fromEvent(element, 'click').subscribe((evt: MouseEvent) => {\r\n                        evt.stopPropagation();\r\n                        this.screenshot(element);\r\n                    })\r\n                );\r\n            }\r\n            this.renderer.addClass(element, 'ngx-feedback__highlight');\r\n        });\r\n    }\r\n\r\n    screenshot(element: any) {\r\n        let image;\r\n        html2canvas(element).then(canvas => {\r\n            image = (canvas as HTMLCanvasElement).toDataURL();\r\n            this.preview.next(image);\r\n        });\r\n        this.renderer.removeClass(element, 'ngx-feedback__highlight');\r\n\r\n        this.clean();\r\n    }\r\n\r\n    clean() {\r\n        if (this.source) {\r\n            this.source.unsubscribe();\r\n        }\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n}\r\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\r\nimport { ModalService } from './modal.service';\r\nimport { SelectorsService } from './selectors.service';\r\nimport { EventsService } from './events.service';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { FeedbackData } from '../models/feedback-data.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OrchestratorService implements OnInit, OnDestroy {\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    onSend: Subject<FeedbackData> = new Subject<FeedbackData>();\r\n    constructor(\r\n        private readonly modalService: ModalService,\r\n        private readonly selectorsService: SelectorsService,\r\n        private readonly eventsService: EventsService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.subscriptions.push(\r\n            this.onFeedbackButtonClick(),\r\n            this.onSpecificFeedbackClick(),\r\n            this.onGenericFeedbackClick(),\r\n            this.onElementSelected(),\r\n            this.onCloseClick(),\r\n            this.onSendClick()\r\n        );\r\n    }\r\n\r\n    private onElementSelected() {\r\n        return this.selectorsService.preview.subscribe(prev => {\r\n            this.modalService.openWithPreview(prev);\r\n        });\r\n    }\r\n\r\n    private onFeedbackButtonClick() {\r\n        return this.eventsService.feedbackClickObservable.subscribe(() => {\r\n            this.modalService.draw();\r\n        });\r\n    }\r\n\r\n    private onSpecificFeedbackClick() {\r\n        return this.eventsService.specificFeedbackClickObservable.subscribe(() => {\r\n            this.modalService.remove();\r\n            this.selectorsService.elementsHighlight();\r\n        });\r\n    }\r\n\r\n    private onGenericFeedbackClick() {\r\n        return this.eventsService.genericFeedbackClickObservable.subscribe(() => {\r\n            this.modalService.remove();\r\n            this.selectorsService.pageScreenshot();\r\n        });\r\n    }\r\n\r\n    private onCloseClick() {\r\n        return this.eventsService.closeClickClickObservable.subscribe(() => {\r\n            this.modalService.remove();\r\n        });\r\n    }\r\n\r\n    private onSendClick() {\r\n        return this.eventsService.onSendClickObservable.subscribe((data: FeedbackData) => {\r\n            this.onSend.next(data);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(sub => {\r\n            sub.unsubscribe();\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ComponentLoaderService } from './services/component-loader.service';\nimport { FeedbackButtonComponent } from './components/feedback-button/feedback-button.component';\nimport { OrchestratorService } from './services';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxFeedbackService {\n    constructor(\n        private readonly componentLoader: ComponentLoaderService<FeedbackButtonComponent>,\n        private readonly orchestratorService: OrchestratorService\n    ) {}\n\n    listenForFeedbacks() {\n        this.orchestratorService.ngOnInit();\n        this.componentLoader.load(FeedbackButtonComponent);\n\n        return this.orchestratorService.onSend;\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-feedback-btn',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n    @Output()\n    click: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    onClick() {\n        this.click.emit();\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-feedback-star',\n    templateUrl: './star.component.html',\n    styleUrls: ['./star.component.scss']\n})\nexport class StarComponent implements OnInit {\n    @Input()\n    type: 'full' | 'empty' | 'temp';\n\n    @Output()\n    click: EventEmitter<any> = new EventEmitter();\n    constructor() {}\n\n    ngOnInit() {}\n\n    onClick() {\n        this.click.emit();\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-feedback-star-vote',\n    templateUrl: './star-vote.component.html',\n    styleUrls: ['./star-vote.component.scss']\n})\nexport class StarVoteComponent implements OnInit {\n    stars: any[] = [\n        { type: 'empty', value: 1 },\n        { type: 'empty', value: 2 },\n        { type: 'empty', value: 3 },\n        { type: 'empty', value: 4 },\n        { type: 'empty', value: 5 }\n    ];\n\n    @Output()\n    voted: EventEmitter<number> = new EventEmitter<number>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    onClick(index: number) {\n        this.stars.forEach((s, i) => {\n            if (i <= index) {\n                s.type = 'full';\n            } else {\n                s.type = 'empty';\n            }\n        });\n        this.voted.emit(index + 1);\n    }\n\n    onMouseEnter(index: number) {\n        this.stars.forEach((s, i) => {\n            if (i <= index && s.type !== 'full') {\n                s.type = 'temp';\n            }\n        });\n    }\n\n    onMouseLeave(index: number) {\n        this.stars.forEach((s, i) => {\n            if (s.type === 'temp') {\n                s.type = 'empty';\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FeedbackButtonComponent } from './components/feedback-button/feedback-button.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { ComponentLoaderService } from './services/component-loader.service';\nimport { ModalService } from './services/modal.service';\nimport { NgxFeedbackService } from './ngx-feedback.service';\nimport { CommonModule } from '@angular/common';\nimport { SelectorsService } from './services/selectors.service';\nimport { ButtonComponent } from './components/button/button.component';\nimport { BackdropComponent } from './components/backdrop/backdrop.component';\nimport { OrchestratorService } from './services/orchestrator.service';\nimport { EventsService } from './services/events.service';\nimport { StarComponent } from './components/star/star.component';\nimport { StarVoteComponent } from './components/star-vote/star-vote.component';\n\n@NgModule({\n    declarations: [\n        FeedbackButtonComponent,\n        ModalComponent,\n        ButtonComponent,\n        BackdropComponent,\n        StarComponent,\n        StarVoteComponent,\n    ],\n    entryComponents: [FeedbackButtonComponent, ModalComponent, BackdropComponent],\n    providers: [NgxFeedbackService, OrchestratorService, ComponentLoaderService, ModalService, SelectorsService, EventsService],\n    imports: [CommonModule],\n    exports: []\n})\nexport class NgxFeedbackModule {}\n","export class FeedbackData {\r\n    rate: number;\r\n    comment: string;\r\n    screenshot: any;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;AAWA,MAAa,sBAAsB;;;;;;IAC/B,YACqB,wBAAkD,EAC3D,MAAsB,EACtB,QAAkB;QAFT,6BAAwB,GAAxB,wBAAwB,CAA0B;QAC3D,WAAM,GAAN,MAAM,CAAgB;QACtB,aAAQ,GAAR,QAAQ,CAAU;KAC1B;;;;;IACJ,IAAI,CAAC,aAAsB;;;cAEjB,GAAG,GAAoB,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;;QAGvH,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;;cAG/B,OAAO,sBAAG,oBAAC,GAAG,CAAC,QAAQ,IAA0B,SAAS,CAAC,CAAC,CAAC,EAAe;;QAGlF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACnC,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QAEtC,OAAO,GAAG,CAAC;KACd;;;YAtBJ,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAN9B,wBAAwB;YACxB,cAAc;YACd,QAAQ;;;;;;;;ACNZ,MAKa,aAAa;IACtB;QAEQ,kBAAa,GAAiB,IAAI,OAAO,EAAO,CAAC;QACzD,4BAAuB,GAAoB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAErE,0BAAqB,GAAiB,IAAI,OAAO,EAAO,CAAC;QACjE,oCAA+B,GAAoB,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;QAErF,yBAAoB,GAAiB,IAAI,OAAO,EAAO,CAAC;QAChE,mCAA8B,GAAoB,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAEnF,eAAU,GAAiB,IAAI,OAAO,EAAO,CAAC;QACtD,8BAAyB,GAAoB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAEpE,gBAAW,GAAiB,IAAI,OAAO,EAAgB,CAAC;QAChE,0BAAqB,GAA6B,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;KAflE;;;;IAiBhB,uBAAuB;QACnB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;KACrC;;;;IAED,qBAAqB;QACjB,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;KACpC;;;;IACD,qBAAqB;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC7B;;;;IAED,cAAc;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;;;;IAED,aAAa,CAAC,IAAkB;QAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/B;;;YApCJ,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;ACJlC,MASa,uBAAuB;;;;IAChC,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;KAAI;;;;IAEpD,QAAQ,MAAK;;;;IACb,OAAO;QACH,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;KAC9C;;;YAZJ,SAAS,SAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,kGAA+C;gBAE/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;;YAPQ,aAAa;;;;;;;ACDtB,MASa,cAAc;;;;IAUvB,YAA6B,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QATzD,WAAM,GAAG,EAAE,CAAC;QAQJ,aAAQ,sBAAiB,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,EAAgB,CAAC;KAC/B;;;;IAE7D,QAAQ,MAAK;;;;IACb,UAAU;QACN,IAAI,CAAC,aAAa,CAAC,uBAAuB,EAAE,CAAC;KAChD;;;;IAED,SAAS;QACL,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;KAC9C;;;;IAED,cAAc;QACV,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;KACvC;;;;;IAED,UAAU,CAAC,OAAY;QACnB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,OAAO,CAAC;KACtC;;;;;IAED,MAAM,CAAC,IAAY;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;KAC7B;;;;IAED,MAAM;QACF,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,UAAU;;;QAAC;YACP,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;SACvC,GAAE,IAAI,CAAC,CAAC;KACZ;;;YA/CJ,SAAS,SAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,wmTAAqC;;aAExC;;;;YANQ,aAAa;;;sBAcjB,SAAS,SAAC,SAAS;;;;;;;AChBxB,MAOa,iBAAiB;IAI1B;QAFA,UAAK,GAAsB,IAAI,YAAY,EAAO,CAAC;KAEnC;;;;IAEhB,QAAQ,MAAK;;;;IAEb,OAAO;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACrB;;;YAfJ,SAAS,SAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,kEAAwC;;aAE3C;;;;;oBAEI,MAAM;;;;;;;ACRX,MAMa,YAAY;;;;IAIrB,YAA6B,eAA4C;QAA5C,oBAAe,GAAf,eAAe,CAA6B;KAAI;;;;;IAE7E,eAAe,CAAC,OAAY;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC9C;;;;IACD,IAAI;QACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC7D;;;;IAED,MAAM;QACF,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;KAC9B;;;YAnBJ,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAJzB,sBAAsB;;;;;;;;ACD/B,MAKa,gBAAgB;;;;IAQzB,YAA6B,eAAiC;QAAjC,oBAAe,GAAf,eAAe,CAAkB;QAP9D,YAAO,GAAiB,IAAI,OAAO,EAAE,CAAC;QACtC,SAAI,GAAmB,EAAE,CAAC;QAOtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACnE;;;;IAED,cAAc;QACV,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAClC;;;;IACD,iBAAiB;;YACT,OAAgB;;cACd,QAAQ,GAAG,EAAE;QACnB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,SAAS;;;;QAAC,CAAC,EAAc;YACpE,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;aACjE;YACD,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,QAAQ,CAAC,SAAS;;;;YAAC,EAAE,IAAI,EAAE,KAAK,OAAO,EAAC,KAAK,CAAC,CAAC,EAAE;gBACjD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CACV,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,SAAS;;;;gBAAC,CAAC,GAAe;oBAClD,GAAG,CAAC,eAAe,EAAE,CAAC;oBACtB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBAC5B,EAAC,CACL,CAAC;aACL;YACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;SAC9D,EAAC,CAAC;KACN;;;;;IAED,UAAU,CAAC,OAAY;;YACf,KAAK;QACT,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI;;;;QAAC,MAAM;YAC5B,KAAK,GAAG,oBAAC,MAAM,IAAuB,SAAS,EAAE,CAAC;YAClD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B,EAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;QAE9D,IAAI,CAAC,KAAK,EAAE,CAAC;KAChB;;;;IAED,KAAK;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;SAC7B;QACD,IAAI,CAAC,IAAI,CAAC,OAAO;;;;QAAC,GAAG,IAAI,GAAG,CAAC,WAAW,EAAE,EAAC,CAAC;KAC/C;;;YArDJ,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAJF,gBAAgB;;;;;;;;ACAhD,MAQa,mBAAmB;;;;;;IAI5B,YACqB,YAA0B,EAC1B,gBAAkC,EAClC,aAA4B;QAF5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QANzC,kBAAa,GAAmB,EAAE,CAAC;QAE3C,WAAM,GAA0B,IAAI,OAAO,EAAgB,CAAC;KAKxD;;;;IAEJ,QAAQ;QACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,qBAAqB,EAAE,EAC5B,IAAI,CAAC,uBAAuB,EAAE,EAC9B,IAAI,CAAC,sBAAsB,EAAE,EAC7B,IAAI,CAAC,iBAAiB,EAAE,EACxB,IAAI,CAAC,YAAY,EAAE,EACnB,IAAI,CAAC,WAAW,EAAE,CACrB,CAAC;KACL;;;;;IAEO,iBAAiB;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS;;;;QAAC,IAAI;YAC/C,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC3C,EAAC,CAAC;KACN;;;;;IAEO,qBAAqB;QACzB,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,SAAS;;;QAAC;YACxD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC5B,EAAC,CAAC;KACN;;;;;IAEO,uBAAuB;QAC3B,OAAO,IAAI,CAAC,aAAa,CAAC,+BAA+B,CAAC,SAAS;;;QAAC;YAChE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;SAC7C,EAAC,CAAC;KACN;;;;;IAEO,sBAAsB;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,SAAS;;;QAAC;YAC/D,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;SAC1C,EAAC,CAAC;KACN;;;;;IAEO,YAAY;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,SAAS;;;QAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;SAC9B,EAAC,CAAC;KACN;;;;;IAEO,WAAW;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,SAAS;;;;QAAC,CAAC,IAAkB;YACzE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B,EAAC,CAAC;KACN;;;;IACD,WAAW;QACP,IAAI,CAAC,aAAa,CAAC,OAAO;;;;QAAC,GAAG;YAC1B,GAAG,CAAC,WAAW,EAAE,CAAC;SACrB,EAAC,CAAC;KACN;;;YA/DJ,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YANzB,YAAY;YACZ,gBAAgB;YAChB,aAAa;;;;;;;;;;;;;ACHtB,MAQa,kBAAkB;;;;;IAC3B,YACqB,eAAgE,EAChE,mBAAwC;QADxC,oBAAe,GAAf,eAAe,CAAiD;QAChE,wBAAmB,GAAnB,mBAAmB,CAAqB;KACzD;;;;IAEJ,kBAAkB;QACd,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAEnD,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;KAC1C;;;YAdJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;YANQ,sBAAsB;YAEtB,mBAAmB;;;;;;;;ACH5B,MAOa,eAAe;IAIxB;QAFA,UAAK,GAAsB,IAAI,YAAY,EAAO,CAAC;KAEnC;;;;IAEhB,QAAQ,MAAK;;;;IAEb,OAAO;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACrB;;;YAfJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,oHAAsC;;aAEzC;;;;;oBAEI,MAAM;;;;;;;ACRX,MAOa,aAAa;IAMtB;QADA,UAAK,GAAsB,IAAI,YAAY,EAAE,CAAC;KAC9B;;;;IAEhB,QAAQ,MAAK;;;;IAEb,OAAO;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACrB;;;YAjBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,q/BAAoC;;aAEvC;;;;;mBAEI,KAAK;oBAGL,MAAM;;;;;;;ACXX,MAOa,iBAAiB;IAY1B;QAXA,UAAK,GAAU;YACX,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;YAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;YAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;YAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;YAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;SAC9B,CAAC;QAGF,UAAK,GAAyB,IAAI,YAAY,EAAU,CAAC;KAEzC;;;;IAEhB,QAAQ,MAAK;;;;;IAEb,OAAO,CAAC,KAAa;QACjB,IAAI,CAAC,KAAK,CAAC,OAAO;;;;;QAAC,CAAC,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,KAAK,EAAE;gBACZ,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;aACnB;iBAAM;gBACH,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;aACpB;SACJ,EAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;KAC9B;;;;;IAED,YAAY,CAAC,KAAa;QACtB,IAAI,CAAC,KAAK,CAAC,OAAO;;;;;QAAC,CAAC,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,EAAE;gBACjC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;aACnB;SACJ,EAAC,CAAC;KACN;;;;;IAED,YAAY,CAAC,KAAa;QACtB,IAAI,CAAC,KAAK,CAAC,OAAO;;;;;QAAC,CAAC,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,EAAE;gBACnB,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;aACpB;SACJ,EAAC,CAAC;KACN;;;YA9CJ,SAAS,SAAC;gBACP,QAAQ,EAAE,wBAAwB;gBAClC,qYAAyC;;aAE5C;;;;;oBAUI,MAAM;;;;;;;AChBX,MA6Ba,iBAAiB;;;YAd7B,QAAQ,SAAC;gBACN,YAAY,EAAE;oBACV,uBAAuB;oBACvB,cAAc;oBACd,eAAe;oBACf,iBAAiB;oBACjB,aAAa;oBACb,iBAAiB;iBACpB;gBACD,eAAe,EAAE,CAAC,uBAAuB,EAAE,cAAc,EAAE,iBAAiB,CAAC;gBAC7E,SAAS,EAAE,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,CAAC;gBAC3H,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,EAAE;aACd;;;;;;;AC5BD,MAAa,YAAY;CAIxB;;;;;;;;;;;;;;"}
