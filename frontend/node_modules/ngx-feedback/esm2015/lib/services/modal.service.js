/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ComponentLoaderService } from './component-loader.service';
import { ModalComponent } from '../components/modal/modal.component';
import { BackdropComponent } from '../components/backdrop/backdrop.component';
import * as i0 from "@angular/core";
import * as i1 from "./component-loader.service";
export class ModalService {
    /**
     * @param {?} componentLoader
     */
    constructor(componentLoader) {
        this.componentLoader = componentLoader;
    }
    /**
     * @param {?} preview
     * @return {?}
     */
    openWithPreview(preview) {
        this.draw();
        this.modalRef.instance.setPreview(preview);
    }
    /**
     * @return {?}
     */
    draw() {
        this.backdropRef = this.componentLoader.load(BackdropComponent);
        this.modalRef = this.componentLoader.load(ModalComponent);
    }
    /**
     * @return {?}
     */
    remove() {
        this.modalRef.destroy();
        this.backdropRef.destroy();
    }
}
ModalService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
/** @nocollapse */
ModalService.ctorParameters = () => [
    { type: ComponentLoaderService }
];
/** @nocollapse */ ModalService.ngInjectableDef = i0.defineInjectable({ factory: function ModalService_Factory() { return new ModalService(i0.inject(i1.ComponentLoaderService)); }, token: ModalService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    ModalService.prototype.modalRef;
    /**
     * @type {?}
     * @private
     */
    ModalService.prototype.backdropRef;
    /**
     * @type {?}
     * @private
     */
    ModalService.prototype.componentLoader;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mZWVkYmFjay8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9tb2RhbC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDckUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7OztBQUc5RSxNQUFNLE9BQU8sWUFBWTs7OztJQUlyQixZQUE2QixlQUE0QztRQUE1QyxvQkFBZSxHQUFmLGVBQWUsQ0FBNkI7SUFBRyxDQUFDOzs7OztJQUU3RSxlQUFlLENBQUMsT0FBWTtRQUN4QixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDWixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7OztJQUNELElBQUk7UUFDQSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUM5RCxDQUFDOzs7O0lBRUQsTUFBTTtRQUNGLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMvQixDQUFDOzs7WUFuQkosVUFBVSxTQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRTs7OztZQUp6QixzQkFBc0I7Ozs7Ozs7O0lBTTNCLGdDQUErQzs7Ozs7SUFDL0MsbUNBQXFEOzs7OztJQUV6Qyx1Q0FBNkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBDb21wb25lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tcG9uZW50TG9hZGVyU2VydmljZSB9IGZyb20gJy4vY29tcG9uZW50LWxvYWRlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTW9kYWxDb21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnRzL21vZGFsL21vZGFsLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEJhY2tkcm9wQ29tcG9uZW50IH0gZnJvbSAnLi4vY29tcG9uZW50cy9iYWNrZHJvcC9iYWNrZHJvcC5jb21wb25lbnQnO1xyXG5cclxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcclxuZXhwb3J0IGNsYXNzIE1vZGFsU2VydmljZSB7XHJcbiAgICBwcml2YXRlIG1vZGFsUmVmOiBDb21wb25lbnRSZWY8TW9kYWxDb21wb25lbnQ+O1xyXG4gICAgcHJpdmF0ZSBiYWNrZHJvcFJlZjogQ29tcG9uZW50UmVmPEJhY2tkcm9wQ29tcG9uZW50PjtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGNvbXBvbmVudExvYWRlcjogQ29tcG9uZW50TG9hZGVyU2VydmljZTxhbnk+KSB7fVxyXG5cclxuICAgIG9wZW5XaXRoUHJldmlldyhwcmV2aWV3OiBhbnkpIHtcclxuICAgICAgICB0aGlzLmRyYXcoKTtcclxuICAgICAgICB0aGlzLm1vZGFsUmVmLmluc3RhbmNlLnNldFByZXZpZXcocHJldmlldyk7XHJcbiAgICB9XHJcbiAgICBkcmF3KCkge1xyXG4gICAgICAgIHRoaXMuYmFja2Ryb3BSZWYgPSB0aGlzLmNvbXBvbmVudExvYWRlci5sb2FkKEJhY2tkcm9wQ29tcG9uZW50KTtcclxuICAgICAgICB0aGlzLm1vZGFsUmVmID0gdGhpcy5jb21wb25lbnRMb2FkZXIubG9hZChNb2RhbENvbXBvbmVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlKCkge1xyXG4gICAgICAgIHRoaXMubW9kYWxSZWYuZGVzdHJveSgpO1xyXG4gICAgICAgIHRoaXMuYmFja2Ryb3BSZWYuZGVzdHJveSgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==