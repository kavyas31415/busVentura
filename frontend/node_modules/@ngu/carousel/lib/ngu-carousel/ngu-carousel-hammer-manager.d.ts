import { NgZone, OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class NguHammerLoader {
    private _hammer$;
    load(): Observable<HammerStatic>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NguHammerLoader, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NguHammerLoader>;
}
export declare class NguCarouselHammerManager implements OnDestroy {
    private _ngZone;
    private _nguHammerLoader;
    private _destroy$;
    constructor(_ngZone: NgZone, _nguHammerLoader: NguHammerLoader);
    ngOnDestroy(): void;
    createHammer(element: HTMLElement): Observable<HammerManager>;
    on(hammer: HammerManager, event: string): Observable<HammerInput>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NguCarouselHammerManager, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NguCarouselHammerManager>;
}
