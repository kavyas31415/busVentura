/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ModalService } from './modal.service';
import { SelectorsService } from './selectors.service';
import { EventsService } from './events.service';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "./modal.service";
import * as i2 from "./selectors.service";
import * as i3 from "./events.service";
var OrchestratorService = /** @class */ (function () {
    function OrchestratorService(modalService, selectorsService, eventsService) {
        this.modalService = modalService;
        this.selectorsService = selectorsService;
        this.eventsService = eventsService;
        this.subscriptions = [];
        this.onSend = new Subject();
    }
    /**
     * @return {?}
     */
    OrchestratorService.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.subscriptions.push(this.onFeedbackButtonClick(), this.onSpecificFeedbackClick(), this.onGenericFeedbackClick(), this.onElementSelected(), this.onCloseClick(), this.onSendClick());
    };
    /**
     * @private
     * @return {?}
     */
    OrchestratorService.prototype.onElementSelected = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        return this.selectorsService.preview.subscribe((/**
         * @param {?} prev
         * @return {?}
         */
        function (prev) {
            _this.modalService.openWithPreview(prev);
        }));
    };
    /**
     * @private
     * @return {?}
     */
    OrchestratorService.prototype.onFeedbackButtonClick = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        return this.eventsService.feedbackClickObservable.subscribe((/**
         * @return {?}
         */
        function () {
            _this.modalService.draw();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    OrchestratorService.prototype.onSpecificFeedbackClick = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        return this.eventsService.specificFeedbackClickObservable.subscribe((/**
         * @return {?}
         */
        function () {
            _this.modalService.remove();
            _this.selectorsService.elementsHighlight();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    OrchestratorService.prototype.onGenericFeedbackClick = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        return this.eventsService.genericFeedbackClickObservable.subscribe((/**
         * @return {?}
         */
        function () {
            _this.modalService.remove();
            _this.selectorsService.pageScreenshot();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    OrchestratorService.prototype.onCloseClick = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        return this.eventsService.closeClickClickObservable.subscribe((/**
         * @return {?}
         */
        function () {
            _this.modalService.remove();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    OrchestratorService.prototype.onSendClick = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        return this.eventsService.onSendClickObservable.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.onSend.next(data);
        }));
    };
    /**
     * @return {?}
     */
    OrchestratorService.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach((/**
         * @param {?} sub
         * @return {?}
         */
        function (sub) {
            sub.unsubscribe();
        }));
    };
    OrchestratorService.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] }
    ];
    /** @nocollapse */
    OrchestratorService.ctorParameters = function () { return [
        { type: ModalService },
        { type: SelectorsService },
        { type: EventsService }
    ]; };
    /** @nocollapse */ OrchestratorService.ngInjectableDef = i0.defineInjectable({ factory: function OrchestratorService_Factory() { return new OrchestratorService(i0.inject(i1.ModalService), i0.inject(i2.SelectorsService), i0.inject(i3.EventsService)); }, token: OrchestratorService, providedIn: "root" });
    return OrchestratorService;
}());
export { OrchestratorService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    OrchestratorService.prototype.subscriptions;
    /** @type {?} */
    OrchestratorService.prototype.onSend;
    /**
     * @type {?}
     * @private
     */
    OrchestratorService.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    OrchestratorService.prototype.selectorsService;
    /**
     * @type {?}
     * @private
     */
    OrchestratorService.prototype.eventsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JjaGVzdHJhdG9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZmVlZGJhY2svIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvb3JjaGVzdHJhdG9yLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFnQixPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7O0FBRzdDO0lBS0ksNkJBQ3FCLFlBQTBCLEVBQzFCLGdCQUFrQyxFQUNsQyxhQUE0QjtRQUY1QixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMxQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBTnpDLGtCQUFhLEdBQW1CLEVBQUUsQ0FBQztRQUUzQyxXQUFNLEdBQTBCLElBQUksT0FBTyxFQUFnQixDQUFDO0lBS3pELENBQUM7Ozs7SUFFSixzQ0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FDbkIsSUFBSSxDQUFDLHFCQUFxQixFQUFFLEVBQzVCLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxFQUM5QixJQUFJLENBQUMsc0JBQXNCLEVBQUUsRUFDN0IsSUFBSSxDQUFDLGlCQUFpQixFQUFFLEVBQ3hCLElBQUksQ0FBQyxZQUFZLEVBQUUsRUFDbkIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUNyQixDQUFDO0lBQ04sQ0FBQzs7Ozs7SUFFTywrQ0FBaUI7Ozs7SUFBekI7UUFBQSxpQkFJQztRQUhHLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQSxJQUFJO1lBQy9DLEtBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVDLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7Ozs7SUFFTyxtREFBcUI7Ozs7SUFBN0I7UUFBQSxpQkFJQztRQUhHLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyx1QkFBdUIsQ0FBQyxTQUFTOzs7UUFBQztZQUN4RCxLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzdCLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7Ozs7SUFFTyxxREFBdUI7Ozs7SUFBL0I7UUFBQSxpQkFLQztRQUpHLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQywrQkFBK0IsQ0FBQyxTQUFTOzs7UUFBQztZQUNoRSxLQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQzNCLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQzlDLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7Ozs7SUFFTyxvREFBc0I7Ozs7SUFBOUI7UUFBQSxpQkFLQztRQUpHLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyw4QkFBOEIsQ0FBQyxTQUFTOzs7UUFBQztZQUMvRCxLQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQzNCLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUMzQyxDQUFDLEVBQUMsQ0FBQztJQUNQLENBQUM7Ozs7O0lBRU8sMENBQVk7Ozs7SUFBcEI7UUFBQSxpQkFJQztRQUhHLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyx5QkFBeUIsQ0FBQyxTQUFTOzs7UUFBQztZQUMxRCxLQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQy9CLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7Ozs7SUFFTyx5Q0FBVzs7OztJQUFuQjtRQUFBLGlCQUlDO1FBSEcsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLHFCQUFxQixDQUFDLFNBQVM7Ozs7UUFBQyxVQUFDLElBQWtCO1lBQ3pFLEtBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNCLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7OztJQUNELHlDQUFXOzs7SUFBWDtRQUNJLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTzs7OztRQUFDLFVBQUEsR0FBRztZQUMxQixHQUFHLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdEIsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOztnQkEvREosVUFBVSxTQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRTs7OztnQkFOekIsWUFBWTtnQkFDWixnQkFBZ0I7Z0JBQ2hCLGFBQWE7Ozs4QkFIdEI7Q0F1RUMsQUFoRUQsSUFnRUM7U0EvRFksbUJBQW1COzs7Ozs7SUFDNUIsNENBQTJDOztJQUUzQyxxQ0FBNEQ7Ozs7O0lBRXhELDJDQUEyQzs7Ozs7SUFDM0MsK0NBQW1EOzs7OztJQUNuRCw0Q0FBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBNb2RhbFNlcnZpY2UgfSBmcm9tICcuL21vZGFsLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBTZWxlY3RvcnNTZXJ2aWNlIH0gZnJvbSAnLi9zZWxlY3RvcnMuc2VydmljZSc7XHJcbmltcG9ydCB7IEV2ZW50c1NlcnZpY2UgfSBmcm9tICcuL2V2ZW50cy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEZlZWRiYWNrRGF0YSB9IGZyb20gJy4uL21vZGVscy9mZWVkYmFjay1kYXRhLm1vZGVsJztcclxuXHJcbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXHJcbmV4cG9ydCBjbGFzcyBPcmNoZXN0cmF0b3JTZXJ2aWNlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb25zOiBTdWJzY3JpcHRpb25bXSA9IFtdO1xyXG5cclxuICAgIG9uU2VuZDogU3ViamVjdDxGZWVkYmFja0RhdGE+ID0gbmV3IFN1YmplY3Q8RmVlZGJhY2tEYXRhPigpO1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBtb2RhbFNlcnZpY2U6IE1vZGFsU2VydmljZSxcclxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IHNlbGVjdG9yc1NlcnZpY2U6IFNlbGVjdG9yc1NlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBldmVudHNTZXJ2aWNlOiBFdmVudHNTZXJ2aWNlXHJcbiAgICApIHt9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goXHJcbiAgICAgICAgICAgIHRoaXMub25GZWVkYmFja0J1dHRvbkNsaWNrKCksXHJcbiAgICAgICAgICAgIHRoaXMub25TcGVjaWZpY0ZlZWRiYWNrQ2xpY2soKSxcclxuICAgICAgICAgICAgdGhpcy5vbkdlbmVyaWNGZWVkYmFja0NsaWNrKCksXHJcbiAgICAgICAgICAgIHRoaXMub25FbGVtZW50U2VsZWN0ZWQoKSxcclxuICAgICAgICAgICAgdGhpcy5vbkNsb3NlQ2xpY2soKSxcclxuICAgICAgICAgICAgdGhpcy5vblNlbmRDbGljaygpXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uRWxlbWVudFNlbGVjdGVkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdG9yc1NlcnZpY2UucHJldmlldy5zdWJzY3JpYmUocHJldiA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlLm9wZW5XaXRoUHJldmlldyhwcmV2KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uRmVlZGJhY2tCdXR0b25DbGljaygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5ldmVudHNTZXJ2aWNlLmZlZWRiYWNrQ2xpY2tPYnNlcnZhYmxlLnN1YnNjcmliZSgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlLmRyYXcoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uU3BlY2lmaWNGZWVkYmFja0NsaWNrKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50c1NlcnZpY2Uuc3BlY2lmaWNGZWVkYmFja0NsaWNrT2JzZXJ2YWJsZS5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm1vZGFsU2VydmljZS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgdGhpcy5zZWxlY3RvcnNTZXJ2aWNlLmVsZW1lbnRzSGlnaGxpZ2h0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkdlbmVyaWNGZWVkYmFja0NsaWNrKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50c1NlcnZpY2UuZ2VuZXJpY0ZlZWRiYWNrQ2xpY2tPYnNlcnZhYmxlLnN1YnNjcmliZSgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdG9yc1NlcnZpY2UucGFnZVNjcmVlbnNob3QoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uQ2xvc2VDbGljaygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5ldmVudHNTZXJ2aWNlLmNsb3NlQ2xpY2tDbGlja09ic2VydmFibGUuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5tb2RhbFNlcnZpY2UucmVtb3ZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvblNlbmRDbGljaygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5ldmVudHNTZXJ2aWNlLm9uU2VuZENsaWNrT2JzZXJ2YWJsZS5zdWJzY3JpYmUoKGRhdGE6IEZlZWRiYWNrRGF0YSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uU2VuZC5uZXh0KGRhdGEpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmZvckVhY2goc3ViID0+IHtcclxuICAgICAgICAgICAgc3ViLnVuc3Vic2NyaWJlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19